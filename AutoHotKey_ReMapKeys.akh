#SingleInstance force ;Skips the dialog box and replaces the old instance automatically, which is similar in effect to the Reload command. 
				;Skips the dialog box and replaces the old instance automatically, which is similar in effect to the Reload command.
#NoEnv  ; Recommended for performance and compatibility with future AutoHotkey releases.
; #Warn  ; Enable warnings to assist with detecting common errors.
SendMode Input  ; Recommended for new scripts due to its superior speed and reliability.
SetWorkingDir %A_ScriptDir%  ; Ensures a consistent starting directory.

 
 

;ToolTip, Press Multimedia Home to 'Mute/UnMute' - Ctrl+Shift+M. Multimedia Mail to 'Raise hand'. Multimedia Stop to 'Camera on/off'. 

;WinNamePreview = Live Studio â€“ Restream - Google Chrome ahk_class Chrome_WidgetWin_1

WinName := "ahk_exe Teams.exe"

; Ctrl+Shift+M --- mute / unmute
; Ctrl+Shift+K --- raise hand
; Ctrl+Shift+O --- camera on/off


Beep3(freq:=450, duration:=50){
	SoundBeep, freq, duration  ;
	Sleep duration/2
	SoundBeep, freq, duration   ;
	Sleep duration/2
	SoundBeep, freq, duration   ;
}
BeepDownSlower(freq:=550, duration:=50){
	SoundBeep, freq*2, duration/2  ;
	;Sleep duration/2
	SoundBeep, freq, duration   ;
	;Sleep duration/2
	SoundBeep, freq/2, duration*2   ;
}
BeepUpFaster(freq:=550, duration:=50){
	SoundBeep, freq/2, duration*2  ;
	;Sleep duration/2
	SoundBeep, freq, duration   ;
	;Sleep duration/2
	SoundBeep, freq*2, duration/2   ;
}




	CustomColor := "001122"  ; Can be any RGB color (it will be made transparent below).
	Gui, GuiOsd:New, +LastFound +AlwaysOnTop -Caption +ToolWindow, OSD  ; +ToolWindow avoids a taskbar button and an alt-tab menu item.
	Gui, Color, %CustomColor%
	Gui, Font, s32  ; Set a large font size (32-point).
	Gui, Add, Text, vMyText cLime, Script started! Ctrl+Shift+M/K/O  ; text serve to auto-size the window.
	; Make all pixels of this color transparent and make the text itself translucent (150):
	WinSet, TransColor, %CustomColor% 150
	Gosub, ShowOSD
	SetTimer, HideOSD, 5000
	;return
	
OsdShow(OsdText :="pressed") {
	GuiControl, GuiOsd:, MyText, %OsdText%
	Gosub, ShowOSD
	SetTimer, HideOSD, 5000
}

; ----------------------------------------------------------------------------------------
Gui, SetWindowDialog:New, ,Pick correct window title
Gui, SetWindowDialog:Add, Text,, Pick a window to use from the list below.`nTo cancel, press ESCAPE or close this window.

; Create the ListView with 4 columns:
Gui, Add, ListView, -Multi r20 w800 gMyListView, Name|Class|Process|WindowID

Gui, SetWindowDialog:Add, Button, Default w80, OK

WinGet, all_windows, List

Loop, %all_windows%
{
	WinGetTitle, WTitle, % "ahk_id " all_windows%A_Index%				; WTitle == Window Title
	WinGetClass, WClass, % "ahk_id " all_windows%A_Index%				; WClass == Window Class
	WinGet, PName, ProcessName, % "ahk_id " all_windows%A_Index%		; PName == Process Name
	WinHwnd := all_windows%A_Index%										; WinHwnd == HWND, Window Handles (Unique ID)
	If WTitle { ;Prevent to get blank titles
		;GuiControl,, MyListBox, "%WTitle%" class:=%WClass% process:=%PName% WinID:=%WinHwnd%  
		LV_ADD("", WTitle, WClass, PName, WinHwnd)
	}
}
LV_ModifyCol()  ; Auto-size each column to fit its contents.

Gui, Show, AutoSize Center
return

MyListView:
if (A_GuiEvent = "DoubleClick")
{

    LV_GetText(RowText, A_EventInfo)  ; Get the text from the row's first field.
    LV_GetText(RowClass, A_EventInfo, 2)  ; Get the text from the row's second field.
    LV_GetText(RowProc, A_EventInfo, 3)  ; Get the text from the row's third field.
    LV_GetText(RowWid, A_EventInfo, 4)  ; Get the text from the row's fourth field.
	WinName := RowText . " ahk_id " . RowWid
	OsdShow(WinName)
    ToolTip You double-clicked row number %A_EventInfo%. Text: "%RowText%"
	SetTimer, RemoveToolTip, 5000
}
return

;MyListBox:
;if (A_GuiEvent != "DoubleClick")
;    return
; Otherwise, the user double-clicked a list item, so treat that the same as pressing OK.
; So fall through to the next label.
ButtonOK:
	;GuiControlGet, MyListBox  ; Retrieve the ListBox's current selection.
	Beep3()
	; ; Retrieve the ListView's current selection.
	FocusedRowNumber := LV_GetNext(0, "F")  ; Find the focused row.
	if not FocusedRowNumber  ; No row is focused.
		return
	LV_GetText(LvWinName, FocusedRowNumber, 1) ; Get the text of the first field.
	BeepUpFaster()
	MsgBox, 4,, Would you like to use the window below?`n`n%LvWinName%
	IfMsgBox, No ;{
		return
	;}
	; Otherwise, try to launch it:
	WinName := LvWinName
	;Run, %MyListBox%,, UseErrorLevel
	;if (ErrorLevel = "ERROR")
	;	MsgBox Could not launch the specified file. Perhaps it is not associated with anything.
return

GuiClose:
GuiEscape:
ExitApp
; ----------------------------------------------------------------------------------------

;return

RemoveToolTip:
	ToolTip
return
RemoveTrayTip:
	HideTrayTip()
return
;  function 
HideTrayTip() {
    TrayTip  ; Attempt to hide it the normal way.
    if SubStr(A_OSVersion,1,3) = "10." {
        Menu Tray, NoIcon
        Sleep 200  ; It may be necessary to adjust this sleep.
        Menu Tray, Icon
    }
}
#MaxThreadsPerHotkey 3
Browser_Home::  												; Mute / unmute
#MaxThreadsPerHotkey 2
OsdShow("Mute, Browser Home pressed")
if WinExist(WinName)
{
    WinActivate  ; Automatically uses the window found above.
    
    Send, ^+m
    return
}
return
		
Launch_Mail::													; Raise hand
OsdShow("Hand, Launch Mail pressed")
if WinExist(WinName)
{
    WinActivate  ; Automatically uses the window found above.
    
    Send, ^+k
    return
}
return

Media_Stop::												; Camera on/off
OsdShow("Camera, Media Stop pressed")
if WinExist(WinName)
{
    WinActivate  ; Automatically uses the window found above.
    
    Send, ^+o
    return
}
return
	
;ToolTip		; hide tooltip


	ShowOSD:
		Gui, GuiOsd:Show, xCenter yCenter NoActivate, OSD  ; NoActivate avoids deactivating the currently active window.
	return

	HideOSD:
		Gui, GuiOsd:Hide
	return


